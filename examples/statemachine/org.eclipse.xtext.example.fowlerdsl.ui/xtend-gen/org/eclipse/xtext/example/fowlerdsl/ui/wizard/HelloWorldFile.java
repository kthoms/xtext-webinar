/**
 * generated by Xtext
 */
package org.eclipse.xtext.example.fowlerdsl.ui.wizard;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.ui.wizard.template.AbstractFileTemplate;
import org.eclipse.xtext.ui.wizard.template.FileTemplate;
import org.eclipse.xtext.ui.wizard.template.IFileGenerator;
import org.eclipse.xtext.ui.wizard.template.StringSelectionTemplateVariable;
import org.eclipse.xtext.ui.wizard.template.StringTemplateVariable;
import org.eclipse.xtext.xbase.lib.IntegerRange;

@FileTemplate(label = "Simple file", icon = "file_template.png", description = "Create a simple empty Statemachine.")
@SuppressWarnings("all")
public final class HelloWorldFile extends AbstractFileTemplate {
  private final StringTemplateVariable stateName = this.text("State:", "MyState", "The name of the first state.");
  
  private final StringSelectionTemplateVariable numberOfStates = this.combo("Number of states", new String[] { "1", "2", "3", "4", "5" }, "Number of states to generate.");
  
  @Override
  public void generateFiles(final IFileGenerator generator) {
    int _parseInt = Integer.parseInt(this.numberOfStates.getValue());
    final IntegerRange states = new IntegerRange(1, _parseInt);
    StringConcatenation _builder = new StringConcatenation();
    String _folder = this.getFolder();
    _builder.append(_folder);
    _builder.append("/");
    String _name = this.getName();
    _builder.append(_name);
    _builder.append(".statemachine");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("/*");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("* This is an example file");
    _builder_1.newLine();
    _builder_1.append(" ");
    _builder_1.append("*/");
    _builder_1.newLine();
    {
      for(final Integer stage : states) {
        _builder_1.append("state ");
        _builder_1.append(this.stateName);
        _builder_1.append(stage);
        _builder_1.newLineIfNotEmpty();
      }
    }
    generator.generate(_builder, _builder_1);
  }
}
